[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Asset Requisition",
  "enabled": 1,
  "modified": "2024-08-07 08:53:11.294025",
  "module": "ICL Corporate Services",
  "name": "Asset Requisition",
  "script": "frappe.ui.form.on('Asset Requisition', {\n\trefresh(frm) {\n        frm.dashboard.add_section(`\n            <h2>IntelliSOFT Consulting Limited Asset Requisition form</h2>\n        `);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet Submission",
  "enabled": 0,
  "modified": "2024-08-05 11:06:24.615837",
  "module": "ICL Corporate Services",
  "name": "Timesheet Submission List",
  "script": "frappe.ui.form.on('Timesheet Submission', {\n    refresh: function (frm) {\n        fetch_and_update_timesheets(frm);\n    },\n    onload: function (frm) {\n        fetch_and_update_timesheets(frm);\n    }\n});\n\nfunction fetch_and_update_timesheets(frm) {\n    if (frm.doc.employee && frm.doc.month) {\n        console.error(\"Employee ID:\", frm.doc.employee);\n        console.error(\"Month:\", frm.doc.month);\n\n        frappe.call({\n            method: 'corporate_services.api.timesheet.timesheet_fetch.fetch_timesheets_for_employee',\n            args: {\n                // employee_id: frm.doc.employee,\n                month: frm.doc.month\n            },\n            callback: function(r) {\n                if (!r.exc) {\n                    frm.clear_table('timesheet_submission_list');\n                    if (r.message) {\n                        r.message.forEach(function(timesheet) {\n                            let child = frm.add_child('timesheet_submission_list');\n                            child.total_hours = timesheet.total_hours;\n                            child.naming_series = timesheet.naming_series;\n                            child.month = timesheet.custom_month;\n                            child.status = timesheet.status;\n                        });\n                    }\n                    frm.refresh_field('timesheet_submission_list');\n                }\n            }\n        });\n    } else {\n        console.error(\"Employee or month is missing.\");\n    }\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Requisition",
  "enabled": 1,
  "modified": "2024-06-11 11:53:27.263078",
  "module": null,
  "name": "Job Requisition Notify HR",
  "script": "frappe.ui.form.on(\"Job Requisition\", {\r\n    after_save: function(frm) {\r\n        // Function to send email notification\r\n        console.log({ frm })\r\n        function sendEmailNotification(subject, message, recipients) {\r\n            console.log({ subject, message, recipients })\r\n            // frappe.call({\r\n            //     method: \"your_custom_app.module_name.script_name.send_email_notification\",\r\n            //     args: {\r\n            //         subject: subject,\r\n            //         message: message,\r\n            //         recipients: recipients\r\n            //     },\r\n            //     callback: function(response) {\r\n            //         if (response.message) {\r\n            //             frappe.show_alert(\"Email notification sent successfully\", 5);\r\n            //         } else {\r\n            //             frappe.show_alert(\"Failed to send email notification\", 5, \"error\");\r\n            //         }\r\n            //     }\r\n            // });\r\n        }\r\n\r\n        // Function to send Frappe notification\r\n        function sendFrappeNotification(message, user) {\r\n            frappe.publish_realtime(\"msgprint\", {\r\n                message: message\r\n            }, user);\r\n        }\r\n\r\n        // Get HR emails\r\n        frappe.call({\r\n            method: \"get_hr_emails\",\r\n            callback: function(response) {\r\n                console.log({ response })\r\n                // var hrEmails = response.message;\r\n                // if (hrEmails && hrEmails.length > 0) {\r\n                //     var subject = \"New Job Requisition Created\";\r\n                //     var message = \"A new job requisition (\" + frm.doc.name + \") has been created.\\n\\nPlease take necessary action.\";\r\n                //     sendEmailNotification(subject, message, hrEmails);\r\n                //     sendFrappeNotification(\"New job requisition '\" + frm.doc.name + \"' created\", frappe.session.user);\r\n                // }\r\n            }\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet Submission",
  "enabled": 1,
  "modified": "2024-08-06 12:54:35.127097",
  "module": "ICL Corporate Services",
  "name": "Timesheet Import",
  "script": "frappe.ui.form.on('Timesheet Submission', {\n    refresh: function(frm) {\n        if (frm.doc.timesheet) {\n            fetch_timesheets_for_employee(frm);\n        }\n    },\n    after_save: function(frm) {\n        if (frm.doc.timesheet) {\n            frappe.call({\n                method: 'corporate_services.api.timesheet.timesheet_import.timesheet_import',\n                args: {\n                    docname: frm.doc.name\n                },\n                callback: function(response) {\n                    if (response.message === 'success') {\n                        frappe.msgprint(__('Employee timesheet created successfully'));\n                        // Proceed with creating the single timesheet after import is successful\n                        fetch_timesheets_for_employee(frm);\n                    } else {\n                        frappe.msgprint(__('There was an error creating the employee timesheet'));\n                    }\n                }\n            });\n        } else {\n            frm.set_value('workflow_state', 'Draft');\n            frm.save().then(() => {\n                frappe.msgprint(__('Timesheet input is empty. Workflow state has been reset to Draft.'));\n            }).catch((err) => {\n                frappe.msgprint(__('There was an error resetting the workflow state.'));\n            });\n        }\n    }\n});\n\n// function internal_single_timesheet(frm) {\n//     frappe.call({\n//         method: 'corporate_services.api.timesheet.internal_timesheet.internal_single_timesheet',\n//         args: {\n//             docname: frm.doc.name\n//         },\n//         callback: function(response) {\n//             if (response.message === 'success') {\n//                 frappe.msgprint(__('The single employee timesheet was created successfully'));\n//                 frm.reload_doc();\n//                 fetch_timesheets_for_employee(frm);\n//             } else {\n//                 frappe.msgprint(__('There was an error creating the single employee timesheet'));\n//             }\n//         }\n//     });\n// }\n\nfunction fetch_timesheets_for_employee(frm) {\n    // Fetch external timesheets\n    frappe.call({\n        method: 'corporate_services.api.timesheet.timesheet_fetch.fetch_timesheets_for_employee',\n        args: {\n            employee_id: frm.doc.employee,\n            month: frm.doc.month\n        },\n        callback: function(r) {\n            if (!r.exc) {\n                frm.clear_table('timesheet_per_project');\n                if (r.message && r.message.length > 0) {\n                    r.message.forEach(function(timesheet) {\n                        let child = frm.add_child('timesheet_per_project');\n                        child.timesheet = timesheet.name;\n                        child.total_hours = timesheet.total_hours;\n                        child.project_name = timesheet.custom_project_name;\n                        child.month = timesheet.custom_month;\n                        child.status = timesheet.status;\n                    });\n                    frm.refresh_field('timesheet_per_project');\n                    console.log(`${r.message.length} timesheet(s) fetched successfully`);\n                } else {\n                    console.log('No timesheets found for the selected employee and month');\n                }\n            } else {\n                frappe.msgprint(__('There was an error fetching timesheets'));\n                console.error('Error fetching timesheets:', r.exc);\n            }\n        }\n    });\n\n    // Fetch internal timesheet\n    frappe.call({\n        method: 'corporate_services.api.timesheet.timesheet_fetch.fetch_internal_timesheet',\n        args: {\n            employee_id: frm.doc.employee,\n            month: frm.doc.month\n        },\n        callback: function(r) {\n            if (!r.exc) {\n                frm.clear_table('internal_monthly_timesheet');\n                if (r.message) {\n                    let child = frm.add_child('internal_monthly_timesheet');\n                    child.timesheet = r.message.name;\n                    child.hours = r.message.total_hours;\n                    child.month = r.message.month;\n                    child.status = r.message.status;\n                    \n                    frm.refresh_field('internal_monthly_timesheet');\n                } else {\n                    console.log('No internal timesheet found for the selected employee and month');\n                }\n            } else {\n                frappe.msgprint(__('There was an error fetching the internal timesheet'));\n                console.error('Error fetching internal timesheet:', r.exc);\n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet Submission",
  "enabled": 1,
  "modified": "2024-07-04 16:59:26.209612",
  "module": "ICL Corporate Services",
  "name": "Timesheet Template Generation",
  "script": "frappe.ui.form.on('Timesheet Submission', {\n    refresh: function(frm) {\n        frm.fields_dict.download_template.$input.on('click', function() {\n            frappe.call({\n                method: \"corporate_services.api.timesheet.timesheet_generation_export.timesheet_generation_export\",\n                args: {\n                    docname: frm.doc.name\n                },\n                callback: function(r) {\n                    if (r.message && typeof r.message === 'string' && r.message !== \"error\") {\n                        var download_url = r.message;\n                        window.open(download_url, '_blank');\n                        \n                    } else if (r.message && typeof r.message === 'object') {\n                        var download_url = r.message.file_url;\n                        window.open(download_url, '_blank');\n                        \n                    } else {\n                        frappe.msgprint(__(\"Failed to generate CSV file. Please check logs for details.\"));\n                    }\n                }\n            });\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Travel Request",
  "enabled": 0,
  "modified": "2024-08-02 08:06:55.658472",
  "module": "ICL Corporate Services",
  "name": "Travel Request Filters",
  "script": "frappe.ui.form.on('Travel Request', {\n\trefresh(frm) {\n\t\tfrm.set_query('employee', function() {\n            return {\n                filters: {\n                    user_id: frappe.session.user\n                }\n            };\n        });\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Continuity Plan",
  "enabled": 1,
  "modified": "2024-06-11 08:34:52.784625",
  "module": "ICL Corporate Services",
  "name": "Work Continuity Plan leave Checklist",
  "script": "frappe.ui.form.on('Work Continuity Plan', {\n\trefresh(frm) {\n     // Insert HTML using jQuery\n        frm.dashboard.add_section(`\n        <h2>IntelliSOFT CONSULTING Work Continuity Plan</h2>\n            <br>\n            <h3>Leave Checklist</h3>\n            <ol>\n                <li>Set out-of-office Autoresponder.</li>\n                <li>Set out-of-office calender.</li>\n                <li>Log off email & work docs.</li>\n            </ol>\n        `);\t\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Travel Request",
  "enabled": 1,
  "modified": "2024-06-11 08:23:59.003398",
  "module": "ICL Corporate Services",
  "name": "Travel Request Actions",
  "script": "frappe.ui.form.on('Travel Request', {\r\n    refresh: function(frm) {\r\n        // Insert HTML using jQuery\r\n        frm.dashboard.add_section(`<br>\r\n        <h2>IntelliSOFT CONSULTING TRAVEL AUTHORIZATION FORM <h2>\r\n        <br>\r\n        <h3>Instructions</h3>\r\n        <ol>\r\n            <li>Please fill out the Travel Authorization Form below.</li>\r\n            <li>Obtain approval from your direct supervisor and HR/Operations and Finance Office prior to making reservations.</li>\r\n            <li>Attach a detailed travel budget using the ICL travel budget template.</li>\r\n        </ol>\r\n        `);\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Asset Custodianship Requisition",
  "enabled": 1,
  "modified": "2024-06-13 11:08:00.666723",
  "module": "ICL Corporate Services",
  "name": "Asset Custodianship Requisition Terms",
  "script": "frappe.ui.form.on('Asset Custodianship Requisition', {\n\trefresh(frm) {\n        frm.dashboard.add_section(`\n        <h2>Asset Requisition Application Form</h2>\n            <br>\n            <p>In acceptance of this asset for usage, I agree to the terms and conditions stated below:</p>\n            <ul>\n                <li>I understand that I am responsible for the asset whilst in my possession, regardless of whether the asset is used in the office, at my place of residence, or in any other location such as a hotel, conference room, car or airport.</li>\n                <li>I am responsible for keeping the asset in good condition while using it and until the time of return.</li>\n                <li>I should be the only authorized person to have access to and use this asset, any unauthorized access to this asset is a violation of this company's policy and employment regulation and employment/consultant contract.</li>\n                <li>In the event of loss, theft, or damage, this must be reported to the police within 24-48 hours, and a copy of a Police report or incident report must be submitted to the company for verification purposes.</li>\n                <li>I understand that any violation of these policies shall lead to a disciplinary action by the company.</li>\n            </ul>\n        `);\t\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Grievance",
  "enabled": 1,
  "modified": "2024-08-05 10:27:56.017352",
  "module": "ICL Corporate Services",
  "name": "Grievance Script",
  "script": "frappe.ui.form.on('Employee Grievance', {\n    refresh: function(frm) {\n        function toggle_fields() {\n            if (frappe.user.has_role('Employee')) {\n                if (frm.doc.workflow_state === 'Draft') {\n                    frm.toggle_display(['investigation_details_section','resolution_details_section','custom_actions_taken'], true);\n                }\n            }\n            if (frappe.user.has_role('HR Manager')) {\n                if (frm.doc.workflow_state === 'Submitted to HR') {\n                    frm.toggle_display(['investigation_details_section','resolution_details_section','custom_actions_taken'], true);\n                }\n            }\n        }\n\n        toggle_fields();\n\n        frm.fields_dict.workflow_state.$input.on('change', function() {\n            toggle_fields();\n        });\n    },\n    before_save: function(frm) {\n        if (frappe.user.has_role('Employee')) {\n            frm.toggle_display(['investigation_details_section','resolution_details_section','custom_actions_taken'], false);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2024-07-22 12:48:02.431673",
  "module": null,
  "name": "Annual leave 7 days notice period",
  "script": "frappe.ui.form.on('Leave Application', {\n    from_date: function(frm) {\n        // Check if the leave type is Annual Leave\n        if (frm.doc.leave_type === 'Annual Leave') {\n            const noticePeriod = frm.doc.annual_leave_notice_period || 7;\n            const minDate = frappe.datetime.add_days(frappe.datetime.get_today(), noticePeriod);\n            if (frm.doc.from_date < minDate) {\n                frappe.msgprint(\"You must apply for Annual Leave at least \" + noticePeriod + \" days in advance.\");\n                frm.set_value('from_date', '')\n                frappe.validated = false;\n            }\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Asset Movement",
  "enabled": 1,
  "modified": "2024-07-29 15:04:11.232485",
  "module": "ICL Corporate Services",
  "name": "Finance Members Filter",
  "script": "frappe.ui.form.on('Asset Movement', {\n    refresh: function(frm) {\n        frappe.call({\n            method: 'corporate_services.api.role.user.get_finance_employees',\n            callback: function(response) {\n                if (response.message) {\n                    let employees = response.message;\n                    frm.set_query('custom_receiver', function() {\n                        return {\n                            filters: {\n                                'name': ['in', employees]\n                            }\n                        };\n                    });\n                }\n            }\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet Submission",
  "enabled": 0,
  "modified": "2024-08-02 10:11:52.571997",
  "module": "ICL Corporate Services",
  "name": "Workflow state change",
  "script": "frappe.ui.form.on('Timesheet Submission', {\n    validate: function(frm) {\n        if (frm.doc.workflow_state === 'Submitted to Supervisor' && !frm.doc.timesheet) {\n            frm.set_value('workflow_state', 'Draft');\n            frappe.msgprint(__('Timesheet input is empty. Workflow state has been reset to Draft.'));\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet Submission",
  "enabled": 1,
  "modified": "2024-08-05 10:29:39.969902",
  "module": "ICL Corporate Services",
  "name": "Timesheet Submission Details",
  "script": "frappe.ui.form.on('Timesheet Submission', {\n    refresh: function(frm) {\n        function toggle_fields() {\n            if (frappe.user.has_role('Employee')) {\n                if (frm.doc.workflow_state === 'Draft') {\n                    frm.toggle_display(['internal_monthly_timesheet','timesheet_per_project'], true);\n                }else {\n                    frm.toggle_display(['internal_monthly_timesheet','timesheet_per_project'], true);\n                }\n            }\n            if (frappe.user.has_role('Finance')) {\n                if (frm.doc.workflow_state === 'Submitted to HR') {\n                    frm.toggle_display(['internal_monthly_timesheet','timesheet_per_project'], true);\n                }\n            }\n        }\n\n        toggle_fields();\n\n        frm.fields_dict.workflow_state.$input.on('change', function() {\n            toggle_fields();\n        });\n    },\n    before_save: function(frm) {\n        if (frappe.user.has_role('Employee')) {\n            frm.toggle_display(['internal_monthly_timesheet','timesheet_per_project'], false);\n        }\n    }\n});\n",
  "view": "Form"
 }
]